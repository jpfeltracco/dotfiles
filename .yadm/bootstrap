#!/usr/bin/env python3

import os
from sys import platform
from subprocess import check_call
from subprocess import CalledProcessError

#################################
##### Helper Functions
#################################

def print_cmd(cmd):
    if not isinstance(cmd, str):
        cmd = " ".join(cmd)
    print("RUN: `{}`".format(cmd))

def print_section(sec):
    print("SECTION: `{}`".format(sec))

def print_info(info):
    print("INFO: `{}`".format(info))

def run(cmd):
    print_cmd(cmd)
    check_call(cmd)

def pkg_check_installed(pkg):
    cmd = "dpkg -l {}".format(pkg)
    success = True
    try:
        run(cmd.split())
    except CalledProcessError as e:
        print("Package {} not found, error: {}".format(pkg, e))
        success = False

    return success

def apt_get_update():
    cmd = "sudo apt-get update"
    run(cmd.split())

def apt_add_repo(repo):
    cmd = "sudo apt-add-repository -y {}".format(repo)
    run(cmd.split())

def apt_get_pkgs(pkg_list):
    cmd = "sudo apt-get install -y {}".format(" ".join(pkg_list))
    run(cmd.split())

def brew_install_pkgs(pkg_str):
    cmd = "brew install {}".format(pkg_str)
    run(cmd.split())

def git_clone(url, flags=None, dest=None):
    command_list = ["git", "clone", url]
    if flags is not None:
        command_list.append(flags)
    if dest is not None:
        command_list.append(dest)
    run(command_list)

def vim_plug_setup():
    plug_install_path = os.path.expanduser("~/.local/share/nvim/site/autoload/plug.vim")
    plug_url = "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
    vim_plug_install_cmd = (
        "curl -fLo {} --create-dirs {}".format(plug_install_path, plug_url).split()
    )
    run(vim_plug_install_cmd)

    nvim_install_plug_cmd = "nvim +PlugInstall +qall".split()
    run(nvim_install_plug_cmd)

def gnome_term_solarized():
    solarized_dir = "/tmp/solarized"
    if not os.path.isdir(solarized_dir):
       git_clone(
           url="https://github.com/Anthony25/gnome-terminal-colors-solarized",
           dest="/tmp/solarized"
       )
       # If dir is cloned, I'll assume it's already run
       run(os.path.join(solarized_dir, "set_dark.sh"))

def add_to_shell_config(line):
    for config in ["~/.bashrc", "~/.zshrc"]:
        config_path = os.path.expanduser(config)
        if os.path.isfile(config_path):
            print("Appending line {} to file {}".format(line, config_path))
            with open(config_path, "a") as config_file:
                config_file.write(line)

def yadm_clone():
    if not os.path.isdir(os.path.expanduser("~/.yadm")):
        dotfiles_repo = "https://github.com/jpfeltracco/dotfiles"
        cmd = ["yadm", "clone", dotfiles_repo, "--recursive"]
        run(cmd)
    else:
        print_info("Yadm already cloned")

def setup_zsh():
    zprezto_repo = os.path.expanduser("~/.zprezto")

    # Yadm should add this repo as a submodule now
    if not os.path.isdir(zprezto_repo):
       git_clone(
           url="https://github.com/jpfeltracco/prezto",
           flags="--recursive",
           dest=zprezto_repo
       )
       
       symlink_setup = "zsh {}/symlink.zsh".format(zprezto_repo)
       run(symlink_setup.split())

    shell = os.environ['SHELL']
    if shell != "/bin/zsh":
        change_shell_cmd = "chsh -s /bin/zsh"
        run(change_shell_cmd.split())


#################################
##### Setup Functions
#################################
def linux_setup(): 
    # Should only run if neovim isn't already installed
    neovim_installed = pkg_check_installed("neovim")

    pkg_list = ["git", "yadm", "zsh", "curl"]

    if not neovim_installed:
        print_section("Add Neovim PPA")
        apt_add_repo("ppa:neovim-ppa/stable")
        apt_get_update()
        pkg_list.append("neovim")

    print_section("Install apt-get packages")
    apt_get_pkgs(pkg_list)

    print_section("Install yadm (dotfiles)")
    yadm_clone()

    print_section("Install Vim Plug")
    vim_plug_setup()

    print_section("Setting gnome terminal solarized")
    gnome_term_solarized()

    setup_zsh()

def macos_setup():
    print_section("Install brew packages")
    brew_install_pkgs("git neovim yadm")

    print_section("Install Vim Plug")
    vim_plug_setup()

#################################
##### Main
#################################
if __name__ == "__main__":
    if platform == "linux" or platform == "linux2":
        # Assume all linux is debian, I know, it's bad
        linux_setup()
    elif platform == "darwin":
        macos_setup()
